# Generated by Django 4.2.5 on 2023-10-10 01:40

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('nome', models.CharField(blank=True, max_length=30, verbose_name='nome')),
                ('sobrenome', models.CharField(blank=True, max_length=30, verbose_name='sobrenome')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('username', models.CharField(max_length=30, unique=True, verbose_name='cpf')),
                ('telefone', models.CharField(blank=True, max_length=20, verbose_name='telefone')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_staff', models.BooleanField(default=False, verbose_name='staff status')),
                ('email_verification_token', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('email_verified', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='customuser_groups', related_query_name='customuser', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='customuser_user_permissions', related_query_name='customuser', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
        ),
        migrations.CreateModel(
            name='Bairro',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='CEP',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(max_length=10, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Cidade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Convenio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100)),
                ('tipo_profissional', models.CharField(blank=True, choices=[('Médico', 'Médico'), ('Dentista', 'Dentista'), ('Ambos', 'Ambos')], max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Especialidade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100)),
                ('tipo_profissional', models.CharField(blank=True, choices=[('Médico', 'Médico'), ('Dentista', 'Dentista')], max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Estado',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Idioma',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Servico',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='TipoClinica',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='TipoProfissional',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Endereco',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rua', models.CharField(max_length=255)),
                ('numero', models.IntegerField(blank=True, null=True)),
                ('complemento', models.CharField(blank=True, max_length=50, null=True)),
                ('latitude', models.FloatField(blank=True, null=True)),
                ('longitude', models.FloatField(blank=True, null=True)),
                ('bairro', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='usuarios.bairro')),
                ('cep', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='usuarios.cep')),
                ('cidade', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='usuarios.cidade')),
                ('estado', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='usuarios.estado')),
            ],
        ),
        migrations.AddField(
            model_name='cidade',
            name='estado',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cidades', to='usuarios.estado'),
        ),
        migrations.AddField(
            model_name='bairro',
            name='cidade',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='usuarios.cidade'),
        ),
        migrations.CreateModel(
            name='Profissional',
            fields=[
                ('customuser_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('is_active', models.BooleanField(default=False, verbose_name='active')),
                ('foto', models.ImageField(blank=True, default='/images/unknown.png', null=True, upload_to='images/')),
                ('codigo', models.CharField(blank=True, max_length=30)),
                ('bairro', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='usuarios.bairro')),
                ('ceps', models.ManyToManyField(blank=True, related_name='profissionais', to='usuarios.cep')),
                ('cidade', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='usuarios.cidade')),
                ('convenios', models.ManyToManyField(blank=True, to='usuarios.convenio')),
                ('enderecos', models.ManyToManyField(blank=True, related_name='profissionais', to='usuarios.endereco')),
                ('especialidades', models.ManyToManyField(to='usuarios.especialidade')),
                ('estado', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='usuarios.estado')),
                ('idiomas', models.ManyToManyField(blank=True, to='usuarios.idioma')),
                ('servicos', models.ManyToManyField(blank=True, to='usuarios.servico')),
                ('tipo_profissional', models.ManyToManyField(blank=True, to='usuarios.tipoprofissional')),
            ],
            options={
                'abstract': False,
            },
            bases=('usuarios.customuser',),
        ),
        migrations.CreateModel(
            name='Clinica',
            fields=[
                ('customuser_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('is_active', models.BooleanField(default=False, verbose_name='active')),
                ('foto', models.ImageField(blank=True, default='/images/unknown.png', null=True, upload_to='images/')),
                ('descricao', models.TextField(blank=True)),
                ('bairros', models.ManyToManyField(blank=True, to='usuarios.bairro')),
                ('ceps', models.ManyToManyField(blank=True, related_name='clinicas', to='usuarios.cep')),
                ('cidades', models.ManyToManyField(blank=True, to='usuarios.cidade')),
                ('convenios', models.ManyToManyField(blank=True, to='usuarios.convenio')),
                ('enderecos', models.ManyToManyField(blank=True, related_name='clinicas', to='usuarios.endereco')),
                ('especialidades', models.ManyToManyField(to='usuarios.especialidade')),
                ('estados', models.ManyToManyField(blank=True, to='usuarios.estado')),
                ('idiomas', models.ManyToManyField(blank=True, to='usuarios.idioma')),
                ('servicos', models.ManyToManyField(blank=True, to='usuarios.servico')),
                ('tipo_clinica', models.ManyToManyField(blank=True, to='usuarios.tipoclinica')),
                ('tipo_profissional', models.ManyToManyField(blank=True, to='usuarios.tipoprofissional')),
            ],
            options={
                'abstract': False,
            },
            bases=('usuarios.customuser',),
        ),
        migrations.CreateModel(
            name='Cliente',
            fields=[
                ('customuser_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('is_active', models.BooleanField(default=False, verbose_name='active')),
                ('bairro', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='usuarios.bairro')),
                ('cidade', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='usuarios.cidade')),
                ('estado', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='usuarios.estado')),
            ],
            options={
                'abstract': False,
            },
            bases=('usuarios.customuser',),
        ),
    ]
